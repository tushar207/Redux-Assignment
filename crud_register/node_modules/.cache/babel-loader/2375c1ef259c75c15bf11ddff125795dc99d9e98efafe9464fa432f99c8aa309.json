{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const insert_user = createAsyncThunk('insert_user', async formvalue => {\n  const res = await axios.post(`http://localhost:3000/user`, formvalue);\n  return res;\n});\nexport const get_user = createAsyncThunk('get_user', async () => {\n  const res = await axios.get(`http://localhost:3000/user`);\n  return res.data;\n});\nexport const delete_user = createAsyncThunk('delete_user', async id => {\n  const res = await axios.delete(`http://localhost:3000/user/${id}`);\n  return res;\n});\nexport const userupdate = createAsyncThunk(\"userupdate\", async formvalue => {\n  const res = await axios.patch(`http://localhost:3000/user/${formvalue.id}`, formvalue);\n  return res;\n});\nexport const UserSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    user: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(get_user.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload;\n    });\n  }\n});\nexport const {} = UserSlice.actions;\nexport default UserSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","insert_user","formvalue","res","post","get_user","get","data","delete_user","id","delete","userupdate","patch","UserSlice","name","initialState","user","reducers","extraReducers","builder","addCase","fulfilled","state","action","isLoading","payload","actions","reducer"],"sources":["C:/Users/makavana tushar/Desktop/tops/Redux Assignment/crud_register/src/Feature/UserSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport const insert_user= createAsyncThunk('insert_user' , async(formvalue)=>{\r\n    const res = await axios.post(`http://localhost:3000/user`, formvalue )\r\n    return res;\r\n})\r\nexport const get_user= createAsyncThunk('get_user' , async()=>{\r\n  const res = await axios.get(`http://localhost:3000/user`,  )\r\n  return res.data;\r\n})\r\nexport const delete_user= createAsyncThunk('delete_user' , async(id)=>{\r\n  const res = await axios.delete(`http://localhost:3000/user/${id}`, )\r\n  return res;\r\n})\r\nexport const userupdate=createAsyncThunk(\"userupdate\",async(formvalue)=>{\r\n  const res=await axios.patch(`http://localhost:3000/user/${formvalue.id}`,formvalue);\r\n  return res;\r\n})\r\n\r\nexport const UserSlice = createSlice({\r\n  name: 'counter',\r\n  initialState:{\r\n   user:[]\r\n  },\r\n  reducers: {\r\n\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(get_user.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.user = action.payload;\r\n    });\r\n  },\r\n})\r\n\r\n\r\nexport const {  } = UserSlice.actions\r\n\r\nexport default UserSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAIzB,OAAO,MAAMC,WAAW,GAAEH,gBAAgB,CAAC,aAAa,EAAG,MAAMI,SAAS,IAAG;EACzE,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,4BAA4B,EAAEF,SAAU,CAAC;EACtE,OAAOC,GAAG;AACd,CAAC,CAAC;AACF,OAAO,MAAME,QAAQ,GAAEP,gBAAgB,CAAC,UAAU,EAAG,YAAS;EAC5D,MAAMK,GAAG,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,4BAA+B,CAAC;EAC5D,OAAOH,GAAG,CAACI,IAAI;AACjB,CAAC,CAAC;AACF,OAAO,MAAMC,WAAW,GAAEV,gBAAgB,CAAC,aAAa,EAAG,MAAMW,EAAE,IAAG;EACpE,MAAMN,GAAG,GAAG,MAAMH,KAAK,CAACU,MAAM,CAAC,8BAA8BD,EAAE,EAAI,CAAC;EACpE,OAAON,GAAG;AACZ,CAAC,CAAC;AACF,OAAO,MAAMQ,UAAU,GAACb,gBAAgB,CAAC,YAAY,EAAC,MAAMI,SAAS,IAAG;EACtE,MAAMC,GAAG,GAAC,MAAMH,KAAK,CAACY,KAAK,CAAC,8BAA8BV,SAAS,CAACO,EAAE,EAAE,EAACP,SAAS,CAAC;EACnF,OAAOC,GAAG;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMU,SAAS,GAAGd,WAAW,CAAC;EACnCe,IAAI,EAAE,SAAS;EACfC,YAAY,EAAC;IACZC,IAAI,EAAC;EACN,CAAC;EACDC,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACf,QAAQ,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACE,SAAS,GAAG,KAAK;MACvBF,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACE,OAAO;IAC7B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAGF,OAAO,MAAM,CAAG,CAAC,GAAGZ,SAAS,CAACa,OAAO;AAErC,eAAeb,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}